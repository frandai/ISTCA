/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package datos;

import java.io.Serializable;

import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author sergio
 */
@Entity
@Table( schema = "public")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "Rappel.findAll", query = "SELECT r FROM Rappel r"),
    @NamedQuery(name = "Rappel.findById", query = "SELECT r FROM Rappel r WHERE r.id = :id"),
    @NamedQuery(name = "Rappel.findByNombre", query = "SELECT r FROM Rappel r WHERE r.nombre = :nombre"),
    @NamedQuery(name = "Rappel.findByMinimoAplicable", query = "SELECT r FROM Rappel r WHERE r.minimoAplicable = :minimoAplicable"),
    @NamedQuery(name = "Rappel.findByPorcentaje", query = "SELECT r FROM Rappel r WHERE r.porcentaje = :porcentaje")})
public class Rappel implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(nullable = false)
    private Integer id;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(nullable = false, length = 2147483647)
    private String nombre;
    @Basic(optional = false)
    @NotNull
    @Column(name = "MINIMO_APLICABLE", nullable = false)
    private Double minimoAplicable;
    @Basic(optional = false)
    @NotNull
    @Column(nullable = false)
    private Double porcentaje;
    @ManyToMany(mappedBy = "rappelList")
    private List<Liquidacion> liquidacionList;
    @ManyToMany(mappedBy = "rappelList")
    private List<ComercialTipo> comercialTipoList;

    public Rappel() {
    }

    public Rappel(Integer id) {
        this.id = id;
    }

    public Rappel(Integer id, String nombre, Double minimoAplicable, Double porcentaje) {
        this.id = id;
        this.nombre = nombre;
        this.minimoAplicable = minimoAplicable;
        this.porcentaje = porcentaje;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public Double getMinimoAplicable() {
        return minimoAplicable;
    }

    public void setMinimoAplicable(Double minimoAplicable) {
        this.minimoAplicable = minimoAplicable;
    }

    public Double getPorcentaje() {
        return porcentaje;
    }

    public void setPorcentaje(Double porcentaje) {
        this.porcentaje = porcentaje;
    }

    @XmlTransient
    public List<Liquidacion> getLiquidacionList() {
        return liquidacionList;
    }

    public void setLiquidacionList(List<Liquidacion> liquidacionList) {
        this.liquidacionList = liquidacionList;
    }

    @XmlTransient
    public List<ComercialTipo> getComercialTipoList() {
        return comercialTipoList;
    }

    public void setComercialTipoList(List<ComercialTipo> comercialTipoList) {
        this.comercialTipoList = comercialTipoList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Rappel)) {
            return false;
        }
        Rappel other = (Rappel) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "datos.Rappel[ id=" + id + " ]";
    }
    
}
