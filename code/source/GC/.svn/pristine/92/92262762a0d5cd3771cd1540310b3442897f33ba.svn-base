/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package datos;

import java.io.Serializable;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author sergio
 */
@Entity
@Table(name = "DIA_SEMANA", schema = "public")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "DiaSemana.findAll", query = "SELECT d FROM DiaSemana d"),
    @NamedQuery(name = "DiaSemana.findById", query = "SELECT d FROM DiaSemana d WHERE d.id = :id"),
    @NamedQuery(name = "DiaSemana.findByNombre", query = "SELECT d FROM DiaSemana d WHERE d.nombre = :nombre"),
    @NamedQuery(name = "DiaSemana.findByOrden", query = "SELECT d FROM DiaSemana d WHERE d.orden = :orden")})
public class DiaSemana implements Serializable, Comparable<DiaSemana> {

    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 1)
    @Column(nullable = false, length = 1)
    private String id;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(nullable = false, length = 2147483647)
    private String nombre;
    @Basic(optional = false)
    @NotNull
    @Column(nullable = false)
    private short orden;
    @ManyToMany(mappedBy = "diaSemanaList")
    private List<Grupo> grupoList;

    public DiaSemana() {
    }

    public DiaSemana(String id) {
        this.id = id;
    }

    public DiaSemana(String id, String nombre, short orden) {
        this.id = id;
        this.nombre = nombre;
        this.orden = orden;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public short getOrden() {
        return orden;
    }

    public void setOrden(short orden) {
        this.orden = orden;
    }

    @XmlTransient
    public List<Grupo> getGrupoList() {
        return grupoList;
    }

    public void setGrupoList(List<Grupo> grupoList) {
        this.grupoList = grupoList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof DiaSemana)) {
            return false;
        }
        DiaSemana other = (DiaSemana) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "datos.DiaSemana[ id=" + id + " ]";
    }

    @Override
    public int compareTo(DiaSemana t) {
        int idME = this.getIdNum();
        int idO = t.getIdNum();
        return (idME-idO);
    }

    public int getIdNum() {

        switch (id.charAt(0)) {
            case 'L':
                return 1;
            case 'M':
                return 2;
            case 'X':
                return 3;
            case 'J':
                return 4;
            case 'V':
                return 5;
            case 'S':
                return 6;
            case 'D':
                return 7;
            default:
                return 0;
        }
    }
}
