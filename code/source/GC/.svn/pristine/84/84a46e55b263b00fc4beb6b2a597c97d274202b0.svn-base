/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package datos;

import java.io.Serializable;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author sergio
 */
@Entity
@Table(name = "ACCION_FORMATIVA_CNCP",  schema = "public")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "AccionFormativaCncp.findAll", query = "SELECT a FROM AccionFormativaCncp a"),
    @NamedQuery(name = "AccionFormativaCncp.findById", query = "SELECT a FROM AccionFormativaCncp a WHERE a.id = :id"),
    @NamedQuery(name = "AccionFormativaCncp.findByCertificado", query = "SELECT a FROM AccionFormativaCncp a WHERE a.certificado = :certificado"),
    @NamedQuery(name = "AccionFormativaCncp.findByRealDecreto", query = "SELECT a FROM AccionFormativaCncp a WHERE a.realDecreto = :realDecreto"),
    @NamedQuery(name = "AccionFormativaCncp.findByUnidadCompetencia", query = "SELECT a FROM AccionFormativaCncp a WHERE a.unidadCompetencia = :unidadCompetencia")})
public class AccionFormativaCncp implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Column(nullable = false)
    private Integer id;
    @Size(max = 2147483647)
    @Column(length = 2147483647)
    private String certificado;
    @Size(max = 2147483647)
    @Column(name = "REAL_DECRETO", length = 2147483647)
    private String realDecreto;
    @Size(max = 2147483647)
    @Column(name = "UNIDAD_COMPETENCIA", length = 2147483647)
    private String unidadCompetencia;
    @OneToMany(mappedBy = "cncp")
    private List<AccionFormativa> accionFormativaList;

    public AccionFormativaCncp() {
    }

    public AccionFormativaCncp(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getCertificado() {
        return certificado;
    }

    public void setCertificado(String certificado) {
        this.certificado = certificado;
    }

    public String getRealDecreto() {
        return realDecreto;
    }

    public void setRealDecreto(String realDecreto) {
        this.realDecreto = realDecreto;
    }

    public String getUnidadCompetencia() {
        return unidadCompetencia;
    }

    public void setUnidadCompetencia(String unidadCompetencia) {
        this.unidadCompetencia = unidadCompetencia;
    }

    @XmlTransient
    public List<AccionFormativa> getAccionFormativaList() {
        return accionFormativaList;
    }

    public void setAccionFormativaList(List<AccionFormativa> accionFormativaList) {
        this.accionFormativaList = accionFormativaList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof AccionFormativaCncp)) {
            return false;
        }
        AccionFormativaCncp other = (AccionFormativaCncp) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "datos.AccionFormativaCncp[ id=" + id + " ]";
    }
    
}
