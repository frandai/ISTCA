/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package datos;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 *
 * @author sergio
 */
@Embeddable
public class EmpresaMatriculaCccPK implements Serializable {
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(nullable = false, length = 2147483647)
    private String nif;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(nullable = false, length = 2147483647)
    private String ccc;

    public EmpresaMatriculaCccPK() {
    }

    public EmpresaMatriculaCccPK(String nif, String ccc) {
        this.nif = nif;
        this.ccc = ccc;
    }

    public String getNif() {
        return nif;
    }

    public void setNif(String nif) {
        this.nif = nif;
    }

    public String getCcc() {
        return ccc;
    }

    public void setCcc(String ccc) {
        this.ccc = ccc;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (nif != null ? nif.hashCode() : 0);
        hash += (ccc != null ? ccc.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof EmpresaMatriculaCccPK)) {
            return false;
        }
        EmpresaMatriculaCccPK other = (EmpresaMatriculaCccPK) object;
        if ((this.nif == null && other.nif != null) || (this.nif != null && !this.nif.equals(other.nif))) {
            return false;
        }
        if ((this.ccc == null && other.ccc != null) || (this.ccc != null && !this.ccc.equals(other.ccc))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "datos.EmpresaMatriculaCccPK[ nif=" + nif + ", ccc=" + ccc + " ]";
    }
    
}
